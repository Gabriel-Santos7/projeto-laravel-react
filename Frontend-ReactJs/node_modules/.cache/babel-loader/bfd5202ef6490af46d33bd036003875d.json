{"ast":null,"code":"export default class HttpService {\n  constructor() {\n    this.url = \"http://localhost:8000/api\";\n\n    this.postData = async (item, added_url, tokenId = \"\") => {\n      const token = await localStorage.getItem(tokenId);\n      const requestOptions = this.postRequestOptions(token, item);\n      console.log(token);\n      return fetch(this.url + \"/\" + added_url, requestOptions).then(response => response.json());\n    };\n\n    this.getData = async (added_url, tokenId = \"\") => {\n      const token = await localStorage.getItem(tokenId);\n      const requestOptions = this.getRequestOptions(token);\n      return fetch(this.url + \"/\" + added_url, requestOptions).then(response => response.json());\n    };\n\n    this.getRequestOptions = token => {\n      let requestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + token,\n          'Content-type': 'application/json'\n        }\n      };\n      return requestOptions;\n    };\n\n    this.postRequestOptions = (token, item) => {\n      let requestOptions = {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer ' + token,\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      };\n      return requestOptions;\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/Projeto/Frontend-ReactJs/src/services/HttpService.js"],"names":["HttpService","url","postData","item","added_url","tokenId","token","localStorage","getItem","requestOptions","postRequestOptions","console","log","fetch","then","response","json","getData","getRequestOptions","method","headers","body","JSON","stringify"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CACf;AAAA;AAAA,SACIC,GADJ,GACU,2BADV;;AAAA,SAIIC,QAJJ,GAIe,OAAMC,IAAN,EAAYC,SAAZ,EAAuBC,OAAO,GAAC,EAA/B,KAAsC;AAC7C,YAAMC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBH,OAArB,CAApB;AAEA,YAAMI,cAAc,GAAG,KAAKC,kBAAL,CAAwBJ,KAAxB,EAA+BH,IAA/B,CAAvB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,aAAOO,KAAK,CAAC,KAAKZ,GAAL,GAAS,GAAT,GAAaG,SAAd,EAAwBK,cAAxB,CAAL,CAA6CK,IAA7C,CACHC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADP,CAAP;AAIH,KAbL;;AAAA,SAgBIC,OAhBJ,GAgBc,OAAMb,SAAN,EAAiBC,OAAO,GAAC,EAAzB,KAAgC;AACtC,YAAMC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBH,OAArB,CAApB;AAEA,YAAMI,cAAc,GAAG,KAAKS,iBAAL,CAAuBZ,KAAvB,CAAvB;AAEA,aAAOO,KAAK,CAAC,KAAKZ,GAAL,GAAS,GAAT,GAAaG,SAAd,EAAwBK,cAAxB,CAAL,CAA6CK,IAA7C,CACHC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADP,CAAP;AAGH,KAxBL;;AAAA,SA2BIE,iBA3BJ,GA2ByBZ,KAAD,IAAW;AAC3B,UAAIG,cAAc,GAAG;AACjBU,QAAAA,MAAM,EAAE,KADS;AAEjBC,QAAAA,OAAO,EAAE;AACL,2BAAkB,YAAWd,KADxB;AAEL,0BAAiB;AAFZ;AAFQ,OAArB;AAOA,aAAOG,cAAP;AACH,KApCL;;AAAA,SAsCIC,kBAtCJ,GAsCyB,CAACJ,KAAD,EAAQH,IAAR,KAAiB;AAClC,UAAIM,cAAc,GAAG;AACjBU,QAAAA,MAAM,EAAE,MADS;AAEjBC,QAAAA,OAAO,EAAE;AACL,2BAAkB,YAAWd,KADxB;AAEL,0BAAiB;AAFZ,SAFQ;AAMjBe,QAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAepB,IAAf;AANU,OAArB;AAQA,aAAOM,cAAP;AACH,KAhDL;AAAA;;AAAA","sourcesContent":["export default class HttpService\r\n{\r\n    url = \"http://localhost:8000/api\";\r\n\r\n\r\n    postData = async(item, added_url, tokenId=\"\") => {\r\n        const token = await localStorage.getItem(tokenId);\r\n\r\n        const requestOptions = this.postRequestOptions(token, item);\r\n        console.log(token);\r\n        return fetch(this.url+\"/\"+added_url,requestOptions).then(\r\n            response=>response.json()\r\n        )\r\n    \r\n    }\r\n\r\n\r\n    getData = async(added_url, tokenId=\"\") => {\r\n        const token = await localStorage.getItem(tokenId);\r\n\r\n        const requestOptions = this.getRequestOptions(token);\r\n\r\n        return fetch(this.url+\"/\"+added_url,requestOptions).then(\r\n            response=>response.json()\r\n        )\r\n    }\r\n\r\n\r\n    getRequestOptions = (token) => {\r\n        let requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : 'Bearer ' +token,\r\n                'Content-type' : 'application/json'\r\n            }\r\n        }\r\n        return requestOptions;\r\n    }\r\n\r\n    postRequestOptions = (token, item) => {\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization' : 'Bearer ' +token,\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(item)\r\n        }\r\n        return requestOptions;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}